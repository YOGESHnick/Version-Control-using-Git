PUSH BASE FILE TO NEW BRANCH:

git checkout main
git checkout -b task-10

echo "Initial commit in task-10" > task-10.txt
git add task-10.txt
git commit -m "feat: Add initial commit in task-10"

git push origin task-10


MAKE MULTIPLE CHANGES:

echo "Change 1" >> task-10.txt
git add task-10.txt
git commit -am "feat: Add Change 1"

echo "Change 2" >> task-10.txt
git add task-10.txt
git commit -am "feat: Add Change 2"

echo "Change 3" >> task-10.txt
git add task-10.txt
git commit -am "feat: Add Change 3"

git push origin task-10


# I made multiple changes, rearranged the folder and made commits for each # Now, squash multiple commits using interactive rebase:

git rebase -i HEAD~4


# Since rebase was done, we have to fore push it

git push --set-upstream origin task-10 --force


USING REFLOG:
# I’ll hard reset the last commit, get its hash from reflog and restore the commit

git reset --hard HEAD~1
git reflog
git reset --hard 30b8bc1


PUSHING CHANGES TO GITHUB:

git checkout main
git merge task-10
git push origin main

